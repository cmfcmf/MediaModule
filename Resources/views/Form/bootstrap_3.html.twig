{% extends 'bootstrap_3_horizontal_layout.html.twig' %}

{% block form_help -%}
    {% for attrname, attrvalue in attr %}
        {% if attrname == 'help' %}
            <span class="help-block">{{ attrvalue }}</span>
        {% endif %}
    {% endfor %}
{%- endblock form_help %}

{% block form_errors -%}
    {{ parent() }}
    {{- block('form_help') -}}
{%- endblock form_errors %}

{%- block widget_attributes -%}
    {% set tmp = false %}
    {% if attr.help|default %}
        {% set tmp = attr.help %}
        {% set attr = attr|merge({help: false}) %}
    {% endif %}
    {{ parent() }}
    {% if tmp != false %}
        {% set attr = attr|merge({help: tmp}) %}
    {% endif %}
{%- endblock widget_attributes -%}

{%- block cmfcmfmediamodule_font_choice_widget -%}
    {{ pageAddAsset('stylesheet', fontUrl) }}
    {{ block('choice_widget') }}
    <script type="text/javascript">
        // Using JavaScript here is extremely ugly. Oh well..
        (function ($) {
            $('#{{ id|e('js') }}').find('.radio label').each(function () {
                var font = $(this).text().trim();
                $(this).css({'font-family': "'" + font + "'"});
            });
        })(jQuery);
    </script>
{%- endblock -%}

{%- block cmfcmfmediamodule_collectiontemplate_widget -%}
    {{ form_row(form.template) }}
    {{ form_row(form.options) }}

    <script>
        (function ($) {
            function findCsrfTokenId($field) {
                return $field.closest('form').find('input[id$=\'_token\']').attr('id');
            }
            function createNoOptionsMessage() {
                var noOptionsMessage = "{{ 'There are no options for this collection template.'|trans }}";
                $options.html('<div class="alert alert-info">' + noOptionsMessage + '</div>');
            }

            var prefix = "{{ form.vars.id|e('js') }}";
            var $template = $('#' + prefix + '_template');
            var $options = $('#' + prefix + '_options');

            var csrfTokenId = findCsrfTokenId($template);
            var $csrf = $('#' + csrfTokenId);

            if ($options.children().length == 0) {
                createNoOptionsMessage();
            }

            $template.change(function() {
                // ... retrieve the corresponding form.
                var $form = $(this).closest('form');
                // Simulate form data, but only include the selected sport value.
                var data = {};
                data[$template.attr('name')] = $template.val();
                data[$csrf.attr('name')] = $csrf.val();

                $template.attr('disabled', true);

                // Submit data via AJAX to the form's action path.
                $.ajax({
                    url : $form.attr('action'),
                    type: $form.attr('method'),
                    data : data,
                    success: function(html) {
                        // Replace current options with the returned ones from the AJAX response
                        // or display an info message that there aren't any options.
                        var $newOptions = $(html).find('#' + prefix + '_options');
                        if ($newOptions.children().length > 0) {
                            $options.replaceWith($newOptions);
                            $options = $newOptions;
                        } else {
                            createNoOptionsMessage();
                        }
                        // Also update CSRF field.
                        $csrf.val($(html).find('#' + csrfTokenId).val());
                    }
                }).always(function () {
                    $template.attr('disabled', false);
                });
            });
        })(jQuery);
    </script>
{%- endblock -%}

{% block cmfcmfmediamodule_permission_widget %}
    {{ pageAddAsset('javascript',  zasset('@CmfcmfMediaModule:js/Collection/Permission/New.js')) }}
    <div class="table-responsive">
        <table class="table table-condensed table-striped">
            <colgroup>
                {% for category in securityCategories %}
                    <col id="cCategory{{ loop.index }}" />
                {% endfor %}
            </colgroup>
            <thead>
                <tr>
                    {% for category in securityCategories %}
                        <th id="hCategory{{ loop.index }}" scope="col" class="text-center">{{ category.title }}</th>
                    {% endfor %}
                </tr>
            </thead>
            <tbody>
            <tr>
                {% for category in securityCategories %}
                    <td headers="hCategory{{ loop.index }}">
                        {% for vertex in securityGraph.verticesByCategory(category) %}
                            <label>
                                <input type="checkbox" class="cmfcmfmedia-security-level"
                                       value="{{ vertex.id|e('html_attr') }}"
                                       name="{{ full_name }}[]"
                                       data-vertex-id="{{ vertex.id|e('html_attr') }}"
                                       data-required-vertices="{{ securityGraph.requiredVertices(vertex).ids|json_encode|e('html_attr') }}"
                                       data-conflicting-vertices="{{ securityGraph.conflictedVertices(vertex).ids|json_encode|e('html_attr') }}"
                                       {% if vertex.id in value %} checked="checked" {% endif %}
                                >
                                {{ vertex.attribute('title') }}
                            </label>
                            <br/>
                        {% endfor %}
                    </td>
                {% endfor %}
            </tr>
            </tbody>
        </table>
    </div>
{% endblock %}

{%- block cmfcmfmediamodule_color_widget -%}
    {{ block('form_widget_simple') }}
    {{ pageAddAsset('stylesheet', zasset('@CmfcmfMediaModule:js/vendor/color-picker/spectrum.css')) }}
    {{ pageAddAsset('javascript', zasset('@CmfcmfMediaModule:js/vendor/color-picker/spectrum.js')) }}
    {#{ pageAddAsset('javascript', zasset('@CmfcmfMediaModule:js/vendor/color-picker/i18n/jquery-spectrum-' ~ lang() ~ '.js')) }#}
    <script type="text/javascript">
        // Using JavaScript here is extremely ugly. Oh well..
        (function ($) {
            $('#{{ id|e('js') }}').spectrum({
                preferredFormat: "hex8", // argb
                showButtons: false,
                showInitial: true,
                flat: true,
                showAlpha: true
            });
        })(jQuery);
    </script>
    <style>
        .sp-container {
            z-index: 100;
        }
    </style>
{%- endblock -%}
