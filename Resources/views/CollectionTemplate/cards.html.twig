{% include '@CmfcmfMediaModule/util.html.twig' %}

{{ pageAddAsset('stylesheet', zasset('@CmfcmfMediaModule:css/vendor/cards.css'), 98) }}

{{ pageAddAsset('javascript', zasset('@CmfcmfMediaModule:js/vendor/masonry.pkgd.min.js'), 98) }}
{{ pageAddAsset('javascript', zasset('@CmfcmfMediaModule:js/vendor/imagesloaded.pkgd.min.js'), 98) }}
{{ pageAddAsset('javascript', zasset('@CmfcmfMediaModule:js/vendor/Sortable.min.js'), 98) }}
{{ pageAddAsset('javascript', zasset('@CmfcmfMediaModule:js/Collection/cards.js')) }}

{% import _self as macro %}
{% macro box(title, supportText, buttons, thumbnail, sortableId, icon, mediaTypeTitle) %}
    <div class="col-xs-12 col-sm-6 col-sm-4 col-md-3{% if sortableId %} sortable{% endif %}" style="padding: 10px"{% if sortableId %} data-id="{{ sortableId|e('html_attr') }}"{% endif %}>
        <div class="card">
            {% if sortableId %}
                <i class="fas fa-sort fa-lg d-none" style="position:absolute; cursor: move; top: 10px; right: 10px"></i>
            {% endif %}
            {% if thumbnail %}
                <img class="card-img-top" src="{{ thumbnail }}" alt="" style="width: 100%">
            {% endif %}
            <div class="card-block">
                <h4 class="card-title">
                    {% if not thumbnail %}
                        <small>{{ mediaTypeTitle }}</small>
                    {% endif %}
                    {{ title }}
                </h4>
                {% if supportText|default %}
                    <p class="card-text">
                        {{ supportText|raw }}
                    </p>
                {% endif %}
                {% for button in buttons %}
                    <a class="card-link" href="{{ button.url }}">
                        {{ button.text }}
                    </a>
                {% endfor %}
            </div>
            <i class="fa-fw {{ icon|e('html_attr') }}" style="position: absolute; right: 5px; bottom: 5px;"></i>
        </div>
    </div>
{% endmacro %}


{% set editCollectionPermission = cmfcmfmediamodule_hasPermission(collection, constant('Cmfcmf\\Module\\MediaModule\\Security\\CollectionPermission\\CollectionPermissionSecurityTree::PERM_LEVEL_EDIT_COLLECTION')) %}
{% set editMediaPermission = cmfcmfmediamodule_hasPermission(collection, constant('Cmfcmf\\Module\\MediaModule\\Security\\CollectionPermission\\CollectionPermissionSecurityTree::PERM_LEVEL_EDIT_MEDIA')) %}

{% if editMediaPermission or editCollectionPermission %}
    <button class="btn btn-secondary btn-sm" type="button" autocomplete="off" id="cmfcmfmedia-sortable-btn">
        <i class="fas fa-sort"></i> {% trans %}Sort items{% endtrans %}
    </button>
{% endif %}

{% set hasParentOrChildCollection = false %}
{% block collections %}
    {% if showChildCollections %}
        <div class="masonry-grid row" id="cmfcmfmedia-collection-sortable-container">
            {% for child in collection.children %}
                {% if cmfcmfmediamodule_hasPermission(child, constant('Cmfcmf\\Module\\MediaModule\\Security\\CollectionPermission\\CollectionPermissionSecurityTree::PERM_LEVEL_OVERVIEW')) %}
                    {% set hasParentOrChildCollection = true %}
                    {% set buttons = [{url: path('cmfcmfmediamodule_collection_display', {slug: child.slug}), text: 'View collection'|trans}] %}
                    {% set thumbnail = false %}
                    {% set supportText = '' %}
                    {% if child.mediaForThumbnail|default %}
                        {% set thumbnail = mediaTypeCollection.mediaTypeFromEntity(child.mediaForThumbnail).thumbnail(child.mediaForThumbnail, 200, 150, 'url') %}
                        {% if child.mediaForThumbnail.attribution|default %}
                            {% set supportText = 'Cover'|trans ~ ' ' ~ 'By %s'|trans({'%s': child.mediaForThumbnail.attribution})|lower ~ '<br>' %}
                        {% endif %}
                    {% endif %}
                    {% set supportText = supportText ~ child|cmfcmfmediamodule_getdescription %}
                    {{ macro.box(child.title, supportText, buttons, thumbnail, editCollectionPermission ? child.id : false, 'fas fa-folder', false) }}
                {% endif %}
            {% endfor %}
        </div>
    {% endif %}
{% endblock %}

{% if hasParentOrChildCollection %}
    <h1>{% trans %}Media{% endtrans %}</h1>
{% endif %}

{% block media %}
    <div class="masonry-grid row" id="cmfcmfmedia-media-sortable-container">
        {% for media in collection.media %}
            {% set supportText = '' %}
            {% if media.attribution|default %}
                {% set supportText = 'By %s%'|trans({'%s%': media.attribution}) %}
            {% endif %}
            {% set buttons = [{url: path('cmfcmfmediamodule_media_display', {slug: media.slug, collectionSlug: media.collection.slug}), text: 'View'|trans}] %}
            {% if media.downloadAllowed|default %}
                {% set buttons = buttons|merge([{url: path('cmfcmfmediamodule_media_download', {slug: media.slug, collectionSlug: media.collection.slug}), text: 'Download'|trans}]) %}
            {% endif %}
            {% set mediaType = mediaTypeCollection.mediaTypeFromEntity(media) %}
            {{ macro.box(media.title, supportText, buttons, mediaType.thumbnail(media, 200, 150, 'url'), editMediaPermission ? media.id : false, mediaType.icon, mediaType.displayName) }}
        {% else %}
            {% if collection.children is empty %}
                <div class="col-xs-12">
                    <div class="alert alert-info">
                        {% trans %}This collection is currently empty!{% endtrans %}
                    </div>
                </div>
            {% endif %}
        {% endfor %}
    </div>
{% endblock %}
